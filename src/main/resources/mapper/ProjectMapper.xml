<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.stms.service.project.ProjectMapper">

	<select id="getList" resultType="ProjectVO">
		select
		p.pjt_id,
		p.pjt_nm,
		p.pjt_dtl,
		date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
		date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
		p.req_user_id,
		p.ins_user_id,
		p.status,
		p.server_id,
		p.created_yn,
		s.server_model,
		s.server_type,
		u1.user_group,
		u2.user_nm
		from project p left
		join server s on p.server_id = s.server_id
		join user u1 on p.req_user_id = u1.user_id
		join user u2 on p.ins_user_id = u2.user_id
		
		<where>
			<if test="server_type != '' and server_type != 'none' and server_type != null">
				 s.server_type = #{server_type}
			</if>
			
			<if test="pjt_end_dt != '' and pjt_end_dt != null">
				and p.pjt_end_dt <![CDATA[<= ]]> #{pjt_end_dt}
			</if>
			
			<if test="ins_user_id != '' and ins_user_id != null">
				and u2.user_nm = #{ins_user_id}
			</if>
			<if test="pjt_nm != '' and pjt_nm != null">
				and p.pjt_nm like concat("%", #{pjt_nm}, "%")
			</if>
		</where>
		
		order by pjt_end_dt
		limit #{pageStart} , #{amount}
	</select>
	
	
	<select id="getRequestList">
	select
		p.pjt_id,
		p.pjt_nm,
		p.pjt_dtl,
		date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
		date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
		p.req_user_id,
		p.ins_user_id,
		p.status,
		p.server_id,
		p.created_yn,
		s.server_model,
		s.server_type,
		u1.user_group
		from project p left
		join server s on p.server_id = s.server_id
		join user u1 on p.req_user_id = u1.user_id
		where p.created_yn = 0
	</select>
	
	
	<select id="getRoledList">
		select
		p.pjt_id,
		p.pjt_nm,
		p.pjt_dtl,
		date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
		date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
		p.req_user_id,
		p.ins_user_id,
		p.status,
		p.server_id,
		p.created_yn,
		s.server_model,
		u1.user_group,
		u2.user_nm
        
		from project p left
		join server s on p.server_id = s.server_id
		join user u1 on p.req_user_id = u1.user_id
		join user u2 on p.ins_user_id = u2.user_id
		
		where pjt_id in (select pjt_id from pjt_mem where user_id = #{user_id})
		order by pjt_end_dt desc
		limit #{cri.pageStart}, #{cri.amount}
	</select>
	
	
	
	<insert id="requestProject">
		insert into project (pjt_nm, pjt_dtl, pjt_st_dt, pjt_end_dt, req_user_id, server_id)
					 values (#{pjt_nm}, #{pjt_dtl}, #{pjt_st_dt}, #{pjt_end_dt}, #{req_user_id}, #{server_id})
	</insert>



	<insert id="insertFiles">
		insert into file (file_serial_num, org_file_nm, file_nm, pjt_id) values (#{file_serial_num}, #{org_file_nm}, #{file_nm}, #{pjt_id})
	</insert>



	<select id="getProjectDetail">
		select
		p.pjt_id,
		p.pjt_nm,
		p.pjt_dtl,
		date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
		date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
		p.req_user_id,
		p.ins_user_id,
		p.status,
		p.server_id,
		p.created_yn,
		s.server_model
		from project p left join server s on p.server_id = s.server_id where p.pjt_id = #{pjt_id};
	</select>
	
	
	
	<select id="getCustomerUserDetail">
		select * from user u join (select req_user_id from project where pjt_id = #{pjt_id}) pm on u.user_id = pm.req_user_id
	</select>
	
	
	
	<select id="getAdminUserDetail">
		select * from user u join (select ins_user_id from project where pjt_id = #{pjt_id}) pm on u.user_id = pm.ins_user_id
	</select>
	
	
	
	<select id="getNormalUserDetail">
		select * from user where user_id not in ((select req_user_id from project where pjt_id = #{pjt_id}),(select ins_user_id from project where pjt_id = #{pjt_id}))
	</select>
	
	<select id="getNormalUserDetailByPage">
		select * from user where user_role = "ROLE_ENGINEER"
	</select>
	
	
	
	<select id="getTaskDetail">
		select 
		t.task_id,
		t.pjt_id,
		t.server_id,
		t.task_nm,
		t.task_dtl,
		t.user_id,
		date_format(t.task_date, "%m-%d") as task_date,
		date_format(t.task_st_dt, "%Y-%m-%d") as task_st_dt,
		date_format(t.task_end_dt, "%Y-%m-%d") as task_end_dt,
		t.task_al_t,
		t.task_oper_t,
        case
			when (t.status_id = 1) then "작업대기"
            when (t.status_id = 2) then "작업중"
            when (t.status_id = 3) then "작업완료"
            when (t.status_id = 4) then "작업연기"
            else "작업중지"
            end as status_id2
		
		from task t left join project p on t.pjt_id = p.pjt_id where p.pjt_id = #{pjt_id}
	</select>
	
	
	
	<select id="getCompletedTask" resultType="int">
		SELECT ROUND( (SELECT COUNT(*) FROM task WHERE pjt_id = #{pjt_id} AND status = '200' and date(task_date) <![CDATA[< ]]> #{pjt_date}) / 
		  			  (SELECT COUNT(*) FROM task WHERE pjt_id = #{pjt_id}) * 100) AS completed_task;
	</select>
	
	
	
	<select id="getFilteredList">
		select * from (select p.pjt_id,
							  p.pjt_nm,
							  p.pjt_dtl,
							  date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
							  date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
							  p.req_user_id,
							  p.ins_user_id,
							  p.status,
							  p.server_id,
							  p.created_yn,
							  s.server_model,
							  s.server_type,
							  u1.user_nm,
							  u2.user_group
				       from project p 
				       join server s on p.server_id = s.server_id 
				       join user u1 on p.ins_user_id = u1.user_id
				       join user u2 on p.req_user_id = u2.user_id) as ps
		<where>
			<if test="server_type != '' and server_type != 'none'">
				 server_type = #{server_type}
			</if>
			
			<if test="pjt_end_dt != ''">
				and date_format(pjt_end_dt, "%Y-%m-%d") <![CDATA[<= ]]> #{pjt_end_dt}
			</if>
			
			<if test="ins_user_id != ''">
				and user_nm = #{ins_user_id}
			</if>
		</where>
	</select>
	
	
	
	<select id="getProjectByName">
		select
		p.pjt_id,
		p.pjt_nm,
		p.pjt_dtl,
		date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
		date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
		p.req_user_id,
		p.ins_user_id,
		p.status,
		p.server_id,
		p.created_yn,
		s.server_model,
		s.server_type,
		u1.user_group,
        u2.user_nm
		from project p left
		join server s on p.server_id = s.server_id
        join user u1 on p.req_user_id = u1.user_id
        join user u2 on p.ins_user_id = u2.user_id
        where p.pjt_nm like concat("%", #{pjt_nm}, "%")
	</select>
	
	
	
	<select id="getTotal">
		select count(*) from (select p.pjt_id,
							  p.pjt_nm,
							  p.pjt_dtl,
							  date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
							  date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
							  p.req_user_id,
							  p.ins_user_id,
							  p.status,
							  p.server_id,
							  p.created_yn,
							  s.server_model,
							  s.server_type,
							  u1.user_nm,
							  u2.user_group
				       from project p 
				       join server s on p.server_id = s.server_id 
				       join user u1 on p.ins_user_id = u1.user_id
				       join user u2 on p.req_user_id = u2.user_id
		<where>
			<if test="server_type != '' and server_type != 'none' and server_type != null">
				 s.server_type = #{server_type}
			</if>
			
			<if test="pjt_end_dt != '' and pjt_end_dt != null">
				and p.pjt_end_dt <![CDATA[<= ]]> #{pjt_end_dt}
			</if>
			
			<if test="ins_user_id != '' and ins_user_id != null">
				and u2.user_nm = #{ins_user_id}
			</if>
			<if test="pjt_nm != '' and pjt_nm != null">
				and p.pjt_nm like concat("%", #{pjt_nm}, "%")
			</if>
		</where>
		) as ps
	</select>
	
	<select id="getRoledTotal">
		select count(*) from project where pjt_id in (select pjt_id from pjt_mem where user_id = #{user_id})
	</select>
	
	<select id="getFilteredTotal">
		select count(*) from (select p.pjt_id,
							  p.pjt_nm,
							  p.pjt_dtl,
							  date_format(p.pjt_st_dt, "%Y-%m-%d") as pjt_st_dt,
							  date_format(p.pjt_end_dt, "%Y-%m-%d") as pjt_end_dt,
							  p.req_user_id,
							  p.ins_user_id,
							  p.status,
							  p.server_id,
							  p.created_yn,
							  s.server_model,
							  s.server_type,
							  u1.user_nm,
							  u2.user_group
				       from project p 
				       join server s on p.server_id = s.server_id 
				       join user u1 on p.ins_user_id = u1.user_id
				       join user u2 on p.req_user_id = u2.user_id) as ps
		<where>
			<if test="server_type != '' and server_type != 'none'">
				 server_type = #{server_type}
			</if>
			
			<if test="pjt_end_dt != ''">
				and date_format(pjt_end_dt, "%Y-%m-%d") <![CDATA[<= ]]> #{pjt_end_dt}
			</if>
			
			<if test="ins_user_id != ''">
				and user_nm = #{ins_user_id}
			</if>
		</where>
	</select>
	
	<select id="getSearchNameTotal">
		select count(*) from project where pjt_nm like concat("%", #{pjt_nm}, "%")
	</select>
	
	<select id="getNotAddedTotal">
		select count(*) from user where user_id not in (select user_id from pjt_mem where pjt_id = #{pjt_id}) and user_role = "ROLE_ENGINEER"
	</select>
	
	
	
	<update id="updateProjectInfo">
		update project set pjt_nm = #{pjt_nm},
				   	   pjt_dtl = #{pjt_dtl},
					   pjt_st_dt = #{pjt_st_dt},
					   pjt_end_dt = #{pjt_end_dt},
					   ins_user_id = #{ins_user_id},
					   status = 1,
					   created_yn = 1
		where pjt_id = #{pjt_id}
	</update>
	
	
	<insert id="insertUserInfo">
		insert into pjt_mem (pjt_id, user_id) values (#{pjt_id} , #{user_id})
	</insert>
	
	
	<select id="getMyServer">
		select * from server where user_id = #{user_id}
	</select>
	
	<select id="getUserByProject">
		select * from user u join pjt_mem pm on u.user_id = pm.user_id where pm.pjt_id = #{pjt_id};
	</select>
	
	<select id="getMemberNotAdded">
		select * from user u where user_id not in (select user_id from pjt_mem where pjt_id = ${pjt_id}) and user_role = "ROLE_ENGINEER" limit #{cri.pageStart}, #{cri.amount}
	</select>
	
	<insert id="updateMemberAtProject">
		insert into pjt_mem (pjt_id, user_id) values (#{pjt_id} , #{user_id})
	</insert>
	
	<select id="getProjectInfoForFiles">
		select * from project where pjt_id = (select max(pjt_id) from project)
	</select>
	
	<select id="getFileName">
		select * from file where pjt_id = #{pjt_id}
	</select>
	
	<delete id="deleteProject">
		delete from project where pjt_id = #{pjt_id}
	</delete>
	
	<update id="modifyProject">
		update project set pjt_nm = #{pjt_nm}, pjt_dtl = #{pjt_dtl}, pjt_end_dt = #{pjt_end_dt} where pjt_id = #{pjt_id}
	</update>
	
	
	
	

</mapper>